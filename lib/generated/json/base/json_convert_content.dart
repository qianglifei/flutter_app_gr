// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:flutter_app_gr/entity/banner_news_detail_entity.dart';
import 'package:flutter_app_gr/generated/json/banner_news_detail_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case BannerNewsDetailEntity:
			return bannerNewsDetailEntityFromJson(data as BannerNewsDetailEntity, json) as T;			case BannerNewsDetailReturnData:
			return bannerNewsDetailReturnDataFromJson(data as BannerNewsDetailReturnData, json) as T;			case BannerNewsDetailReturnDataZxxq:
			return bannerNewsDetailReturnDataZxxqFromJson(data as BannerNewsDetailReturnDataZxxq, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case BannerNewsDetailEntity:
			return bannerNewsDetailEntityToJson(data as BannerNewsDetailEntity);			case BannerNewsDetailReturnData:
			return bannerNewsDetailReturnDataToJson(data as BannerNewsDetailReturnData);			case BannerNewsDetailReturnDataZxxq:
			return bannerNewsDetailReturnDataZxxqToJson(data as BannerNewsDetailReturnDataZxxq);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'BannerNewsDetailEntity':
			return BannerNewsDetailEntity().fromJson(json);			case 'BannerNewsDetailReturnData':
			return BannerNewsDetailReturnData().fromJson(json);			case 'BannerNewsDetailReturnDataZxxq':
			return BannerNewsDetailReturnDataZxxq().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'BannerNewsDetailEntity':
			return List<BannerNewsDetailEntity>();			case 'BannerNewsDetailReturnData':
			return List<BannerNewsDetailReturnData>();			case 'BannerNewsDetailReturnDataZxxq':
			return List<BannerNewsDetailReturnDataZxxq>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}